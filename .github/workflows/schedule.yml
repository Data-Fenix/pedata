name: Lint & PyTest on schedule
permissions:
  issues: read
  contents: write
  checks: write
  pull-requests: write
  actions: read

on: 
  schedule:
    - cron: '30 1 * * *'

env:
  MIN_COV: 60

jobs:
  run:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        branch:
          - ML_dev
          - dev
          - dev_ops
          - dev_ops_gitflows
          - main
        os: [ubuntu-latest]
        python-version: ["3.11"]

    steps:
      # Checkout codebase
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ matrix.branch }}
          token: ${{ github.token }}


      # Setup python environment
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      # Install Company dependencies
      - name: Install Company dependencies
        run: |
          pip install --upgrade pip ".[ci]"
          pip list

      # Huggingface Login
      - name: Huggingface Login
        run: |  
          git config --global credential.helper store
          huggingface-cli login --token ${{ secrets.HF_TOKEN_JS }} --add-to-git-credential
          git config --global user.email ${{ secrets.EMAIL_JS }}
          git config --global user.name ${{ secrets.USERNAME_JS }}
    

      # Black formatter execution
      # - name: Check files using the black formatter
      #   id: action_black
      #   uses: psf/black@stable
      #   with:
      #     options: "--pyi --safe --verbose"
      #     jupyter: true
          
      # Ruff linter execution
      - name: Check files using the Ruff linter
        uses: chartboost/ruff-action@v1
        with:
          args: "--fix --no-unsafe-fixes --no-cache"


      # PyTest and coverage
      - name: Run PyTest & Generate Coverage Report  
        run: |  
          coverage run -m pytest -v -s --junitxml=test-results.xml
          coverage report -m --fail-under=$MIN_COV

      # Comment test result on commmit
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          files: test-results.xml

      # Commit & push changes
      - name: Check for modified files
        id: git-check
        run: echo "modified=$(if git diff-index --quiet HEAD --; then echo "false"; else echo "true"; fi)" >> $GITHUB_OUTPUT
      - name: Commit changes
        if: steps.git-check.outputs.modified == 'true'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git commit -a -m "Add changes"
      - name: Get branch names
        uses: tj-actions/branch-names@v8
        id: branch-names
      - name: Push changes
        continue-on-error: true
        if: steps.git-check.outputs.modified == 'true'
        uses: ad-m/github-push-action@master
        with:
          branch: ${{ steps.branch-names.outputs.current_branch }}
          github_token: ${{ github.token }}
          force: true
